<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.blog.dao.CommentMapper" >
  <resultMap id="BaseResultMap" type="org.blog.model.Comment" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="blog_id" property="blogId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_user" property="createUser" jdbcType="INTEGER" />
    <result column="dr" property="dr" jdbcType="INTEGER" />
    <result column="ts" property="ts" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="org.blog.model.Comment" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
    <association column="create_user" property="user" javaType="org.blog.model.User" select="queryUserById" />
    <association column="blog_id" property="blog" javaType="org.blog.model.Blog" select="queryBlogById"/>
  </resultMap>
    <resultMap id="UserResultMap" type="org.blog.model.User" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="openid" property="openid" jdbcType="VARCHAR" />
        <result column="nickname" property="nickname" jdbcType="VARCHAR" />
        <result column="sex" property="sex" jdbcType="INTEGER" />
        <result column="province" property="province" jdbcType="VARCHAR" />
        <result column="city" property="city" jdbcType="VARCHAR" />
        <result column="country" property="country" jdbcType="VARCHAR" />
        <result column="headimgurl" property="headimgurl" jdbcType="VARCHAR" />
        <result column="privilege" property="privilege" jdbcType="VARCHAR" />
        <result column="unionid" property="unionid" jdbcType="VARCHAR" />
        <result column="src" property="src" jdbcType="INTEGER" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="dr" property="dr" jdbcType="INTEGER" />
        <result column="ts" property="ts" jdbcType="TIMESTAMP" />
    </resultMap>
    <resultMap id="BlogResultMap" type="org.blog.model.Blog" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="title" property="title" jdbcType="VARCHAR" />
        <result column="cover" property="cover" jdbcType="VARCHAR" />
        <result column="summary" property="summary" jdbcType="VARCHAR" />
        <result column="content" property="content" jdbcType="VARCHAR" />
        <result column="like_num" property="likeNum" jdbcType="INTEGER" />
        <result column="look_num" property="lookNum" jdbcType="INTEGER" />
        <result column="talk_num" property="talkNum" jdbcType="INTEGER" />
        <result column="key_words" property="keyWords" jdbcType="VARCHAR" />
        <result column="type_id" property="typeId" jdbcType="INTEGER" />
        <result column="create_user" property="createUser" jdbcType="INTEGER" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="dr" property="dr" jdbcType="INTEGER" />
        <result column="ts" property="ts" jdbcType="TIMESTAMP" />
    </resultMap>
    <select id="queryBlogById" resultMap="BlogResultMap">
        select *
        from blog
        where id = #{id}
    </select>
    <select id="countAll" resultType="java.lang.Integer">
        select count(*)
        from comment
        <if test="blogId!=null">
            where blog_id = #{blogId}
        </if>
    </select>
    <select id="queryUserById" resultMap="UserResultMap">
        select *
        from user
        where id = #{id}
    </select>
  <sql id="Base_Column_List" >
    id, blog_id, create_time, create_user, dr, ts
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comment
    where id = #{id,jdbcType=INTEGER}
  </select>
    <select id="query" resultMap="ResultMapWithBLOBs">
        select *
        from comment
        where 1=1
        <if test="title!=null">
            and blog_id IN
            (SELECT id FROM blog WHERE title LIKE '%${title}%')
        </if>
        <if test="id!=null">
            and id =#{id}
        </if>
        <if test="blogId!=null">
            and blog_id = #{blogId}
        </if>
        <if test="content!=null and content!=''">
            and content LIKE '%${content}%'
        </if>
        <if test="createUser!=null">
            and create_user = #{createUser}
        </if>
        <if test="dr!=null">
            and dr =#{dr}
        </if>
        <if test="cBeginTime!=null and cBeginTime!=''">
            and create_time >= #{cBeginTime}
        </if>
        <if test="cEndTime!=null and cEndTime!=''">
            and create_time <![CDATA[<=]]> #{cEndTime}
        </if>
        <if test="tBeginTime!=null and tBeginTime!=''">
            and ts >= #{tBeginTime}
        </if>
        <if test="tEndTime!=null and tEndTime!=''">
            and ts <![CDATA[<=]]> #{tEndTime}
        </if>
        order by
        <if test="field==3">
            create_time
        </if>
        <if test="field==5">
            ts
        </if>
        <if test="order==1">
            DESC
        </if>
        <if test="order==0">
            ASC
        </if>
        <if test="page!=null and rows!=null">
            limit #{page},#{rows}
        </if>
    </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from comment
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="batchDelete" parameterType="java.lang.Integer" >
    delete from comment
    where id in
    <foreach collection="ids" item="id" index="" open="(" close=")" separator=",">
        #{id}
    </foreach>
  </delete>
    <delete id="batchDeleteByBlogId" parameterType="java.lang.Integer" >
    delete from comment
    where blog_id in
    <foreach collection="ids" item="id" index="" open="(" close=")" separator=",">
        #{id}
    </foreach>
  </delete>
  <insert id="insert" parameterType="org.blog.model.Comment" >
    insert into comment (id, blog_id, create_time, 
      create_user, dr, ts, 
      content)
    values (#{id,jdbcType=INTEGER}, #{blogId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createUser,jdbcType=INTEGER}, #{dr,jdbcType=INTEGER}, #{ts,jdbcType=TIMESTAMP}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
    <insert id="add" parameterType="org.blog.model.Comment" >
    insert into comment (blog_id, create_time,
      create_user, dr, ts,
      content)
    values (#{blogId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP},
      #{createUser,jdbcType=INTEGER}, #{dr,jdbcType=INTEGER}, #{ts,jdbcType=TIMESTAMP},
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.blog.model.Comment" >
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="blogId != null" >
        blog_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="dr != null" >
        dr,
      </if>
      <if test="ts != null" >
        ts,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="blogId != null" >
        #{blogId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=INTEGER},
      </if>
      <if test="dr != null" >
        #{dr,jdbcType=INTEGER},
      </if>
      <if test="ts != null" >
        #{ts,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.blog.model.Comment" >
    update comment
    <set >
      <if test="blogId != null" >
        blog_id = #{blogId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=INTEGER},
      </if>
      <if test="dr != null" >
        dr = #{dr,jdbcType=INTEGER},
      </if>
      <if test="ts != null" >
        ts = #{ts,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="org.blog.model.Comment" >
    update comment
    set blog_id = #{blogId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=INTEGER},
      dr = #{dr,jdbcType=INTEGER},
      ts = #{ts,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.blog.model.Comment">
    update comment
    set blog_id = #{blogId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=INTEGER},
      dr = #{dr,jdbcType=INTEGER},
      ts = #{ts,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <update id="updateDr">
    update comment
    set
      dr = #{dr,jdbcType=INTEGER},
      ts = #{ts,jdbcType=TIMESTAMP}
    where  id in
    <foreach collection="ids" item="id" open="(" close=")" separator="," index="">
        #{id}
    </foreach>
  </update>
</mapper>