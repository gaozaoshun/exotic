<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.blog.dao.RecommendMapper" >
  <resultMap id="BaseResultMap" type="org.blog.model.Recommend" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="blog_id" property="blogId" jdbcType="INTEGER" />
    <result column="lv" property="lv" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_user" property="createUser" jdbcType="INTEGER" />
    <result column="dr" property="dr" jdbcType="INTEGER" />
    <result column="ts" property="ts" jdbcType="TIMESTAMP" />
    <association column="blog_id" property="blog" javaType="org.blog.model.Blog" select="queryBlogById" />
    <association column="create_user" property="sysUser" javaType="org.admin.model.SysUser" select="queryBySysUser"/>
  </resultMap>
  <resultMap id="BlogResultMap" type="org.blog.model.Blog" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="cover" property="cover" jdbcType="VARCHAR" />
    <result column="summary" property="summary" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="like_num" property="likeNum" jdbcType="INTEGER" />
    <result column="look_num" property="lookNum" jdbcType="INTEGER" />
    <result column="talk_num" property="talkNum" jdbcType="INTEGER" />
    <result column="key_words" property="keyWords" jdbcType="VARCHAR" />
    <result column="type_id" property="typeId" jdbcType="INTEGER" />
    <result column="create_user" property="createUser" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="dr" property="dr" jdbcType="INTEGER" />
    <result column="ts" property="ts" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="SysUserResultMap" type="org.admin.model.SysUser" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="headimg" property="headimg" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="dr" property="dr" jdbcType="INTEGER" />
    <result column="ts" property="ts" jdbcType="TIMESTAMP" />
  </resultMap>
  <select id="queryBySysUser" resultMap="SysUserResultMap">
    select *
    from sys_user
    WHERE id = #{id}
  </select>
  <select id="queryBlogById" resultMap="BlogResultMap">
    select *
    from blog
    where id = #{id}
  </select>
  <sql id="Base_Column_List" >
    id, blog_id, lv, create_time, create_user, dr, ts
  </sql>
  <select id="getCount" resultType="java.lang.Integer" parameterType="java.lang.Integer">
    SELECT COUNT(*)
    FROM recommend
    WHERE 1=1
    <if test="dr!=null">
      dr=#{dr}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from recommend
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="query" resultMap="BaseResultMap">
    select *
    from recommend
    where 1=1
    <if test="dr!=null">
      AND dr=#{dr}
    </if>
    order by
    <if test="field==4">
      lv
    </if>
    <if test="field==3">
      create_time
    </if>
    <if test="field==5">
      ts
    </if>
    <if test="order==1">
      DESC
    </if>
    <if test="order==0">
      ASC
    </if>
    limit #{page},#{rows}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from recommend
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="delete" parameterType="java.lang.Integer" >
    delete from recommend
    where id IN
    <foreach collection="ids" item="id" index="" separator="," close=")" open="(">
      #{id}
    </foreach>
  </delete>
  <delete id="batchDeleteByBlogId" parameterType="java.lang.Integer" >
    delete from recommend
    where blog_id IN
    <foreach collection="ids" item="id" index="" separator="," close=")" open="(">
      #{id}
    </foreach>
  </delete>
  <insert id="insert" parameterType="org.blog.model.Recommend" >
    insert into recommend (blog_id, lv,
      create_time, create_user, dr, 
      ts)
    values (#{blogId,jdbcType=INTEGER}, #{lv,jdbcType=INTEGER},
      #{createTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=INTEGER}, #{dr,jdbcType=INTEGER}, 
      #{ts,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="org.blog.model.Recommend" >
    insert into recommend
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="blogId != null" >
        blog_id,
      </if>
      <if test="lv != null" >
        lv,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="dr != null" >
        dr,
      </if>
      <if test="ts != null" >
        ts,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="blogId != null" >
        #{blogId,jdbcType=INTEGER},
      </if>
      <if test="lv != null" >
        #{lv,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=INTEGER},
      </if>
      <if test="dr != null" >
        #{dr,jdbcType=INTEGER},
      </if>
      <if test="ts != null" >
        #{ts,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.blog.model.Recommend" >
    update recommend
    <set >
      <if test="blogId != null" >
        blog_id = #{blogId,jdbcType=INTEGER},
      </if>
      <if test="lv != null" >
        lv = #{lv,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=INTEGER},
      </if>
      <if test="dr != null" >
        dr = #{dr,jdbcType=INTEGER},
      </if>
      <if test="ts != null" >
        ts = #{ts,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.blog.model.Recommend" >
    update recommend
    set blog_id = #{blogId,jdbcType=INTEGER},
      lv = #{lv,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=INTEGER},
      dr = #{dr,jdbcType=INTEGER},
      ts = #{ts,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="modify" parameterType="org.blog.model.Recommend" >
    update recommend
    set
    <if test="blogId!=null">
      blog_id = #{blogId,jdbcType=INTEGER},
    </if>
    <if test="lv!=null">
      lv = #{lv,jdbcType=INTEGER},
    </if>
    <if test="dr!=null">
      dr = #{dr,jdbcType=INTEGER},
    </if>
      ts = #{ts,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateDr">
    update recommend
    set
      dr = #{dr,jdbcType=INTEGER},
      ts = #{ts,jdbcType=TIMESTAMP}
    where id IN
    <foreach collection="ids" open="(" close=")" separator="," index="" item="id">
      #{id}
    </foreach>
  </update>
</mapper>