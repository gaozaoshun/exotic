<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.blog.dao.BlogMapper" >
  <resultMap id="BaseResultMap" type="org.blog.model.Blog" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="cover" property="cover" jdbcType="VARCHAR" />
    <result column="summary" property="summary" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="like_num" property="likeNum" jdbcType="INTEGER" />
    <result column="look_num" property="lookNum" jdbcType="INTEGER" />
    <result column="talk_num" property="talkNum" jdbcType="INTEGER" />
    <result column="key_words" property="keyWords" jdbcType="VARCHAR" />
    <result column="type_id" property="typeId" jdbcType="INTEGER" />
    <result column="create_user" property="createUser" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="dr" property="dr" jdbcType="INTEGER" />
    <result column="ts" property="ts" jdbcType="TIMESTAMP" />
    <association column="type_id" property="type" javaType="org.blog.model.Type" select="queryTypeById" />
    <association column="create_user" property="sysUser" javaType="org.admin.model.SysUser" select="queryUserById"/>
  </resultMap>
    <resultMap id="TypeResultMap" type="org.blog.model.Type" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="lv" property="lv" jdbcType="INTEGER" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="create_user" property="createUser" jdbcType="INTEGER" />
        <result column="dr" property="dr" jdbcType="INTEGER" />
        <result column="ts" property="ts" jdbcType="TIMESTAMP" />
    </resultMap>
    <resultMap id="UserResultMap" type="org.admin.model.SysUser" >
      <id column="id" property="id" jdbcType="INTEGER" />
      <result column="username" property="username" jdbcType="VARCHAR" />
      <result column="password" property="password" jdbcType="VARCHAR" />
      <result column="nickname" property="nickname" jdbcType="VARCHAR" />
      <result column="headimg" property="headimg" jdbcType="VARCHAR" />
      <result column="state" property="state" jdbcType="INTEGER" />
      <result column="type" property="type" jdbcType="INTEGER" />
      <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
      <result column="dr" property="dr" jdbcType="INTEGER" />
      <result column="ts" property="ts" jdbcType="TIMESTAMP" />
    </resultMap>


  <sql id="Base_Column_List" >
    id, title, cover, summary, content, like_num, look_num, talk_num, key_words, type_id, 
    create_user, create_time, dr, ts
  </sql>

  <select id="queryUserById" resultMap="UserResultMap" parameterType="java.lang.Integer">
    select *
    from sys_user
    where id = #{id}
  </select>
  <select id="queryTypeById"  resultMap="TypeResultMap">
      select *
      from type
      where id = #{id}
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from blog
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="queryById" resultMap="BaseResultMap">
      select *
      from blog
      where id = #{id}
      and ifnull(dr,0) = #{dr}
  </select>
  <select id="queryByIdAndUser" resultMap="BaseResultMap">
      select *
      from blog
      where id = #{id}
      and ifnull(dr,0) = #{dr}
      and create_user = #{userId}
  </select>
  <select id="query" resultMap="BaseResultMap">
    select *
    from blog
    where ifnull(dr,0) = #{dr}
    order by
    <if test="field==0">
        like_num
    </if>
    <if test="field==1">
        look_num
    </if>
    <if test="field==2">
        talk_num
    </if>
    <if test="field==4">
        lv
    </if>
    <if test="field==3">
        create_time
    </if>
    <if test="field==5">
        ts
    </if>
    <if test="order==1">
      DESC
    </if>
    <if test="order==0">
      ASC
    </if>
    limit #{page},#{rows}
  </select>
    <select id="queryByType" resultMap="BaseResultMap">
    select *
    from blog
    where ifnull(dr,0) = #{dr}
    <if test="typeId!=0">
      and type_id = #{typeId}
    </if>
    order by
    <if test="field==0">
        like_num
    </if>
    <if test="field==1">
        look_num
    </if>
    <if test="field==2">
        talk_num
    </if>
    <if test="field==4">
        lv
    </if>
    <if test="field==3">
        create_time
    </if>
    <if test="field==5">
        ts
    </if>
    <if test="order==1">
      DESC
    </if>
    <if test="order==0">
      ASC
    </if>
    limit #{page},#{rows}
  </select>
  <select id="queryByQ" resultMap="BaseResultMap">
    select *
    from blog
    where ifnull(dr,0) = #{dr}
    and title like '%${q}%'
    order by
    <if test="field==0">
        like_num
    </if>
    <if test="field==1">
        look_num
    </if>
    <if test="field==2">
        talk_num
    </if>
    <if test="field==4">
        lv
    </if>
    <if test="field==3">
        create_time
    </if>
    <if test="field==5">
        ts
    </if>
    <if test="order==1">
      DESC
    </if>
    <if test="order==0">
      ASC
    </if>
    limit #{page},#{rows}
  </select>
    <select id="queryByWhereAndUser" resultMap="BaseResultMap">
    select *
    from blog
    where 1 = 1
    <if test="userId!=null">
        and create_user = #{userId}
    </if>
    <if test="title!=null">
        and title like '%${title}%'
    </if>
    <if test="beginTime!=null and beginTime !=''">
        and create_time >= #{beginTime}
    </if>
    <if test="endTime!=null and endTime!=''">
        and create_time <![CDATA[<=]]> #{endTime}
    </if>
    <if test="dr!=null">
        and dr = #{dr}
    </if>
    <if test="typeId!=null">
        and type_id = #{typeId}
    </if>
    limit #{page},#{rows}
  </select>
  <select id="queryByAll" parameterType="Map" resultMap="BaseResultMap">
    select *
    from blog
    where 1 = 1
    <if test="title!=null">
        and title like '%${title}%'
    </if>
    <if test="typeId!=null">
      and type_id = #{typeId}
    </if>
    <if test="cBeginTime!=null and cBeginTime!=''">
        and create_time >= #{cBeginTime}
    </if>
    <if test="cEndTime!=null and cEndTime!=''">
        and create_time <![CDATA[<=]]> #{cEndTime}
    </if>
    <if test="dr!=null">
        and dr = #{dr}
    </if>
    <if test="tBeginTime!=null and tBeginTime!=''">
      and ts >= #{tBeginTime}
    </if>
    <if test="tEndTime!=null and tEndTime!=''">
      and ts <![CDATA[<=]]> #{tEndTime}
    </if>
    <if test="minLike!=null">
      and like_num >= #{minLike}
    </if>
    <if test="maxLike!=null">
      and like_num <![CDATA[<=]]> #{maxLike}
    </if>
    <if test="minLook!=null">
      and look_num >= #{minLook}
    </if>
    <if test="maxLook!=null">
      and look_num <![CDATA[<=]]> #{maxLook}
    </if>
    <if test="minTalk!=null">
      and talk_num >= #{minTalk}
    </if>
    <if test="maxTalk!=null">
      and talk_num <![CDATA[<=]]> #{maxTalk}
    </if>
    <if test="keyWords!=null">
        and key_words like '%${keyWords}%'
    </if>
    <if test="userId!=null">
      and create_user = #{userId}
    </if>
    order by
    <if test="field==0">
      id
    </if>
    <if test="field==1">
      create_time
    </if>
    <if test="field==2">
      ts
    </if>
    <if test="field==3">
      like_num
    </if>
    <if test="field==4">
      look_num
    </if>
    <if test="field==5">
      talk_num
    </if>
    <if test="order==1">
      DESC
    </if>
    <if test="order==0">
      ASC
    </if>
    <if test="page!=null and rows!=null">
      limit #{page},#{rows}
    </if>
  </select>
  <select id="countAll" parameterType="Map" resultType="java.lang.Integer">
    select count(*)
    from blog
    where 1 = 1
    <if test="title!=null">
        and title like '%${title}%'
    </if>
    <if test="typeId!=null">
      and type_id = #{typeId}
    </if>
    <if test="cBeginTime!=null">
        and create_time >= #{cBeginTime}
    </if>
    <if test="cEndTime!=null">
        and create_time <![CDATA[<=]]> #{cEndTime}
    </if>
    <if test="dr!=null">
        and dr = #{dr}
    </if>
    <if test="tBeginTime!=null">
      and ts >= #{tBeginTime}
    </if>
    <if test="tEndTime!=null">
      and ts <![CDATA[<=]]> #{tEndTime}
    </if>
    <if test="minLike!=null">
      and like_num >= #{minLike}
    </if>
    <if test="maxLike!=null">
      and like_num <![CDATA[<=]]> #{maxLike}
    </if>
    <if test="minLook!=null">
      and look_num >= #{minLook}
    </if>
    <if test="maxLook!=null">
      and look_num <![CDATA[<=]]> #{maxLook}
    </if>
    <if test="minTalk!=null">
      and talk_num >= #{minTalk}
    </if>
    <if test="maxTalk!=null">
      and talk_num <![CDATA[<=]]> #{maxTalk}
    </if>
    <if test="keyWords!=null">
        and key_words like '%${keyWords}%'
    </if>
    <if test="userId!=null">
      and create_user = #{userId}
    </if>
  </select>
  <select id="countByType" resultType="java.lang.Integer">
    select count(*)
    from blog
    <if test="typeId!=0">
    where type_id = #{typeId}
    </if>
  </select>
  <select id="countByWhereAndUser" resultType="java.lang.Integer">
    select count(*)
    from blog
    where 1=1
    <if test="userId!=null">
      and create_user = #{userId}
    </if>
    <if test="title!=null">
      and title like '%${title}%'
    </if>
    <if test="dr!=null">
      and dr = #{dr}
    </if>
    <if test="typeId!=null">
      and type_id = #{typeId}
    </if>
    <if test="beginTime!=null">
      and create_time >= #{beginTime}
    </if>
    <if test="endTime!=null">
      and create_time <![CDATA[<=]]> #{endTime}
    </if>
  </select>
  <select id="countByQ" resultType="java.lang.Integer" parameterType="java.lang.String">
    select count(*)
    from blog
    where title like '%${q}%'
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from blog
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByPksAndUserId" parameterType="java.lang.Integer" >
    delete from blog
    where id in 
    <foreach collection="ids" item="item" open="(" close=")" separator="," index="">
      #{item}
    </foreach>
    and create_user = #{userId}
  </delete>
  <insert id="insert" parameterType="org.blog.model.Blog" >
    insert into blog (id, title, cover, 
      summary, content, like_num, 
      look_num, talk_num, key_words, 
      type_id, create_user, create_time, 
      dr, ts)
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{cover,jdbcType=VARCHAR}, 
      #{summary,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{likeNum,jdbcType=INTEGER}, 
      #{lookNum,jdbcType=INTEGER}, #{talkNum,jdbcType=INTEGER}, #{keyWords,jdbcType=VARCHAR}, 
      #{typeId,jdbcType=INTEGER}, #{createUser,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{dr,jdbcType=INTEGER}, #{ts,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="org.blog.model.Blog" >
    insert into blog
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="cover != null" >
        cover,
      </if>
      <if test="summary != null" >
        summary,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="likeNum != null" >
        like_num,
      </if>
      <if test="lookNum != null" >
        look_num,
      </if>
      <if test="talkNum != null" >
        talk_num,
      </if>
      <if test="keyWords != null" >
        key_words,
      </if>
      <if test="typeId != null" >
        type_id,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="dr != null" >
        dr,
      </if>
      <if test="ts != null" >
        ts,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="cover != null" >
        #{cover,jdbcType=VARCHAR},
      </if>
      <if test="summary != null" >
        #{summary,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="likeNum != null" >
        #{likeNum,jdbcType=INTEGER},
      </if>
      <if test="lookNum != null" >
        #{lookNum,jdbcType=INTEGER},
      </if>
      <if test="talkNum != null" >
        #{talkNum,jdbcType=INTEGER},
      </if>
      <if test="keyWords != null" >
        #{keyWords,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null" >
        #{typeId,jdbcType=INTEGER},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dr != null" >
        #{dr,jdbcType=INTEGER},
      </if>
      <if test="ts != null" >
        #{ts,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.blog.model.Blog" >
    update blog
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="cover != null" >
        cover = #{cover,jdbcType=VARCHAR},
      </if>
      <if test="summary != null" >
        summary = #{summary,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="likeNum != null" >
        like_num = #{likeNum,jdbcType=INTEGER},
      </if>
      <if test="lookNum != null" >
        look_num = #{lookNum,jdbcType=INTEGER},
      </if>
      <if test="talkNum != null" >
        talk_num = #{talkNum,jdbcType=INTEGER},
      </if>
      <if test="keyWords != null" >
        key_words = #{keyWords,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null" >
        type_id = #{typeId,jdbcType=INTEGER},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dr != null" >
        dr = #{dr,jdbcType=INTEGER},
      </if>
      <if test="ts != null" >
        ts = #{ts,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.blog.model.Blog" >
    update blog
    set title = #{title,jdbcType=VARCHAR},
      cover = #{cover,jdbcType=VARCHAR},
      summary = #{summary,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      like_num = #{likeNum,jdbcType=INTEGER},
      look_num = #{lookNum,jdbcType=INTEGER},
      talk_num = #{talkNum,jdbcType=INTEGER},
      key_words = #{keyWords,jdbcType=VARCHAR},
      type_id = #{typeId,jdbcType=INTEGER},
      create_user = #{createUser,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      dr = #{dr,jdbcType=INTEGER},
      ts = #{ts,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByBlogAndUser" parameterType="org.blog.model.Blog" >
    update blog
    set title = #{title,jdbcType=VARCHAR},
      cover = #{cover,jdbcType=VARCHAR},
      summary = #{summary,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      key_words = #{keyWords,jdbcType=VARCHAR},
      type_id = #{typeId,jdbcType=INTEGER},
      ts = #{ts,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
    and create_user = #{createUser}
  </update>
  <update id="updateByDrAndUser" parameterType="org.blog.model.Blog" >
    update blog
    set
      dr = #{dr},
      ts = #{ts}
    where create_user = #{userId}
    and id in
    <foreach collection="ids" item="id" open="(" close=")" separator="," index="">
      #{id}
    </foreach>
  </update>
</mapper>