<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.admin.dao.SysUserMapper" >
  <resultMap id="BaseResultMap" type="org.admin.model.SysUser" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="headimg" property="headimg" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="dr" property="dr" jdbcType="INTEGER" />
    <result column="ts" property="ts" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="SysRoleResultMap" type="org.admin.model.SysRole" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="icon" property="icon" jdbcType="VARCHAR" />
    <result column="descp" property="descp" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_user" property="createUser" jdbcType="INTEGER" />
    <result column="dr" property="dr" jdbcType="INTEGER" />
    <result column="ts" property="ts" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, username, password, nickname, headimg, state, type, create_time, dr, ts
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from sys_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="queryRolesById" resultMap="SysRoleResultMap">
    SELECT *
    FROM sys_role sr
    LEFT JOIN sys_user_role sur
    ON sr.id = sur.role_id
    where 1=1
    <if test="id!=null">
      AND sur.user_id = #{id}
    </if>
    <if test="page!=null and rows!=null">
      limit #{page},#{rows}
    </if>
  </select>
  <select id="getCount" resultType="java.lang.Integer">
    select DISTINCT COUNT(*)
    from sys_user
    where 1=1
    <if test="dr!=null">
      AND dr = #{dr}
    </if>
    <if test="q!=null and q!=''">
      AND username LIKE '%${q}%'
      OR nickname LIKE '%${q}%'
    </if>
  </select>
  <select id="queryByUserName" resultMap="BaseResultMap" parameterType="java.lang.String">
    select *
    from sys_user
    where username = #{username}
  </select>
  <select id="query" resultMap="BaseResultMap" parameterType="Map" >
    select *
    from sys_user
    where 1=1
    <if test="q!=null and q!=''">
      AND username LIKE '%${q}%'
      OR nickname LIKE '%${q}%'
    </if>
    <if test="id!=null">
      AND id = #{id}
    </if>
    <if test="username!=null">
      AND username LIKE '%${username}%'
    </if>
    <if test="nickname!=null">
      AND nickname LIKE '%${nickname}%'
    </if>
    <if test="state!=null">
      AND state = #{state}
    </if>
    <if test="type!=type">
      AND type = #{type}
    </if>
    <if test="dr!=null">
      AND dr = #{dr}
    </if>
    <if test="cBeginTime!=null and cBeginTime!=''">
      AND create_time >= #{cBeginTime}
    </if>
    <if test="cEndTime!=null and cEndTime!=''">
      AND create_time <![CDATA[<=]]> #{cEndTime}
    </if>
    <if test="tBeginTime!=null and tBeginTime!=''">
      AND ts >= #{tBeginTime}
    </if>
    <if test="tEndTime!=null and tEndTime!=''">
      AND ts <![CDATA[<=]]> #{tEndTime}
    </if>
    ORDER BY
    <if test="field==3">
      create_time
    </if>
    <if test="field==5">
      ts
    </if>
    <if test="order==0">
      ASC
    </if>
    <if test="order==1">
      DESC
    </if>
    <if test="page!=null and rows!=null">
      limit #{page},#{rows}
    </if>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sys_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="delete" parameterType="java.lang.Integer" >
    delete from sys_user
    where id IN
    <foreach collection="ids" separator="," open="(" close=")" index="" item="id">
      #{id}
    </foreach>
  </delete>
  <delete id="deleteUserRoles" parameterType="java.lang.Integer">
    delete from sys_user_role
    where user_id = #{userId}
  </delete>
  <delete id="deleteRole">
    delete from sys_user_role
    where role_id = #{roleId}
    AND user_id = #{userId}
  </delete>
  <insert id="saveUserRoles">
    insert into sys_user_role(user_id,role_id)
    values
    <foreach collection="ids" item="roleId" index="index" separator=",">
      (#{userId},#{roleId})
    </foreach>
  </insert>
  <insert id="insert" parameterType="org.admin.model.SysUser" >
    insert into sys_user (id, username, password, 
      nickname, headimg, state, 
      type, create_time, dr, 
      ts)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{nickname,jdbcType=VARCHAR}, #{headimg,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, 
      #{type,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{dr,jdbcType=INTEGER}, 
      #{ts,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="org.admin.model.SysUser" >
    insert into sys_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="nickname != null" >
        nickname,
      </if>
      <if test="headimg != null" >
        headimg,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="dr != null" >
        dr,
      </if>
      <if test="ts != null" >
        ts,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="headimg != null" >
        #{headimg,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dr != null" >
        #{dr,jdbcType=INTEGER},
      </if>
      <if test="ts != null" >
        #{ts,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.admin.model.SysUser" >
    update sys_user
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="headimg != null" >
        headimg = #{headimg,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dr != null" >
        dr = #{dr,jdbcType=INTEGER},
      </if>
      <if test="ts != null" >
        ts = #{ts,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.admin.model.SysUser" >
    update sys_user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      headimg = #{headimg,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      dr = #{dr,jdbcType=INTEGER},
      ts = #{ts,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateDr" parameterType="org.admin.model.SysUser" >
    update sys_user
    set
      dr = #{dr,jdbcType=INTEGER},
      ts = #{ts,jdbcType=TIMESTAMP}
    where id IN
    <foreach collection="ids" item="id" index="" close=")" open="(" separator=",">
      #{id}
    </foreach>
  </update>
  <update id="modify" parameterType="org.admin.model.SysUser" >
    update sys_user
    set
     <if test="username!=null and username!=''">
       username = #{username,jdbcType=VARCHAR},
     </if>
    <if test="password!=null and password!=''">
      password = #{password,jdbcType=VARCHAR},
    </if>
    <if test="nickname!=null and nickname!=''">
      nickname = #{nickname,jdbcType=VARCHAR},
    </if>
    <if test="headimg!=null and headimg!=''">
      headimg = #{headimg,jdbcType=VARCHAR},
    </if>
    <if test="state!=null">
      state = #{state,jdbcType=INTEGER},
    </if>
    <if test="type!=null">
      type = #{type,jdbcType=INTEGER},
    </if>
    <if test="dr!=null">
      dr = #{dr,jdbcType=INTEGER},
    </if>
    <if test="ts!=null">
      ts = #{ts,jdbcType=TIMESTAMP}
    </if>
    1=1
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="modifyUser" parameterType="org.admin.model.SysUser" >
    update sys_user
    set
      password = #{password,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      headimg = #{headimg,jdbcType=VARCHAR},
      ts = #{ts,jdbcType=TIMESTAMP}
    where username = #{username}
  </update>
  <update id="modifyDr" parameterType="org.admin.model.SysUser" >
    update sys_user
    set
    dr = #{dr,jdbcType=INTEGER},
    ts = #{ts,jdbcType=TIMESTAMP}
    where id = #{id}
  </update>
</mapper>