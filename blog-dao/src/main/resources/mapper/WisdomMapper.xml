<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.blog.dao.WisdomMapper" >
  <resultMap id="BaseResultMap" type="org.blog.model.Wisdom" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="text" property="text" jdbcType="VARCHAR" />
    <result column="img" property="img" jdbcType="VARCHAR" />
    <result column="lv" property="lv" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_user" property="createUser" jdbcType="INTEGER" />
    <result column="dr" property="dr" jdbcType="INTEGER" />
    <result column="ts" property="ts" jdbcType="TIMESTAMP" />
    <association column="create_user" property="sysUser" javaType="org.admin.model.SysUser" select="queryBySysUser"/>
  </resultMap>
  <resultMap id="SysUserResultMap" type="org.admin.model.SysUser" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="headimg" property="headimg" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="dr" property="dr" jdbcType="INTEGER" />
    <result column="ts" property="ts" jdbcType="TIMESTAMP" />
  </resultMap>
  <select id="queryBySysUser" resultMap="SysUserResultMap" parameterType="java.lang.Integer">
    SELECT *
    FROM sys_user
    WHERE id = #{id}
  </select>
  <sql id="Base_Column_List" >
    id, title, text, img, lv, create_time, create_user, dr, ts
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from wisdom
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="getCount" resultType="java.lang.Integer">
    select COUNT(*)
    from wisdom
    where 1=1
    <if test="title!=null and title!=''">
      AND title LIKE '%${title}%'
    </if>
    <if test="dr!=null">
      AND dr = #{dr}
    </if>
    ORDER BY
    <if test="field==4">
      lv
    </if>
    <if test="field==3">
      create_time
    </if>
    <if test="field==5">
      ts
    </if>
    <if test="order==1">
      DESC
    </if>
    <if test="order==0">
      ASC
    </if>
    <if test="page!=null and rows!=null">
      limit #{page},#{rows}
    </if>
  </select>
  <select id="queryOrderByLv" resultMap="BaseResultMap">
    select *
    from wisdom
    where ifnull(dr,0) = #{dr}
    order by lv
    <if test="order==1">
      DESC
    </if>
    <if test="order==0">
      ASC
    </if>
    limit 1;
  </select>
  <select id="query" resultMap="BaseResultMap">
    select *
    from wisdom
    where 1=1
    <if test="dr!=null">
      AND dr = #{dr}
    </if>
    <if test="id!=null">
      AND id = #{id}
    </if>
    <if test="title!=null and title!=''">
      AND title LIKE '%${title}%'
    </if>
    order by
    <if test="field==4">
      lv
    </if>
    <if test="field==3">
      create_time
    </if>
    <if test="field==5">
      ts
    </if>
    <if test="order==1">
      DESC
    </if>
    <if test="order==0">
      ASC
    </if>
    <if test="page!=null and rows!=null">
      limit #{page},#{rows}
    </if>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from wisdom
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="delete" parameterType="java.lang.Integer" >
    delete from wisdom
    where id IN
    <foreach collection="ids" item="id" index="" separator="," close=")" open="(">
      #{id}
    </foreach>
  </delete>
  <insert id="insert" parameterType="org.blog.model.Wisdom" >
    insert into wisdom (id, title, text, 
      img, lv, create_time, 
      create_user, dr, ts
      )
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{text,jdbcType=VARCHAR}, 
      #{img,jdbcType=VARCHAR}, #{lv,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createUser,jdbcType=INTEGER}, #{dr,jdbcType=INTEGER}, #{ts,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.blog.model.Wisdom" >
    insert into wisdom
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="text != null" >
        text,
      </if>
      <if test="img != null" >
        img,
      </if>
      <if test="lv != null" >
        lv,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="dr != null" >
        dr,
      </if>
      <if test="ts != null" >
        ts,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="text != null" >
        #{text,jdbcType=VARCHAR},
      </if>
      <if test="img != null" >
        #{img,jdbcType=VARCHAR},
      </if>
      <if test="lv != null" >
        #{lv,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=INTEGER},
      </if>
      <if test="dr != null" >
        #{dr,jdbcType=INTEGER},
      </if>
      <if test="ts != null" >
        #{ts,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.blog.model.Wisdom" >
    update wisdom
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="text != null" >
        text = #{text,jdbcType=VARCHAR},
      </if>
      <if test="img != null" >
        img = #{img,jdbcType=VARCHAR},
      </if>
      <if test="lv != null" >
        lv = #{lv,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=INTEGER},
      </if>
      <if test="dr != null" >
        dr = #{dr,jdbcType=INTEGER},
      </if>
      <if test="ts != null" >
        ts = #{ts,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.blog.model.Wisdom" >
    update wisdom
    set title = #{title,jdbcType=VARCHAR},
      text = #{text,jdbcType=VARCHAR},
      img = #{img,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=INTEGER},
      dr = #{dr,jdbcType=INTEGER},
      ts = #{ts,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="modify" parameterType="org.blog.model.Wisdom" >
    update wisdom
    set
    <if test="title!=null and title!=''">
      title = #{title,jdbcType=VARCHAR},
    </if>
    <if test="text!=null and text!=''">
      text = #{text,jdbcType=VARCHAR},
    </if>
    <if test="img!=null and img!=''">
      img = #{img,jdbcType=VARCHAR},
    </if>
    <if test="lv!=null">
      lv = #{lv,jdbcType=INTEGER},
    </if>
    <if test="dr!=null">
      dr = #{dr,jdbcType=INTEGER},
    </if>
    <if test="ts!=null">
      ts = #{ts,jdbcType=TIMESTAMP}
    </if>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateDr">
    update wisdom
    set
      dr = #{dr,jdbcType=INTEGER},
      ts = #{ts,jdbcType=TIMESTAMP}
    where id IN
    <foreach collection="ids" open="(" close=")" separator="," index="" item="id">
      #{id}
    </foreach>
  </update>
</mapper>